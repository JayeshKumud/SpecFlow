// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowPrep.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("US002 Search Product", Description="\tIn order to go through Products details\r\n\tAs registered User\r\n\tI want to be able" +
        " to search product", SourceFile="Feature\\US002_SearchProduct.feature", SourceLine=0)]
    public partial class US003SearchProductFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US002_SearchProduct.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US003 Search Product", "\tIn order to go through Products details\r\n\tAs registered User\r\n\tI want to be able" +
                    " to search product", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table1.AddRow(new string[] {
                        "jayesh.kumud@gmail.com",
                        "9320419345"});
#line 7
 testRunner.Given("User logged in with below credential:", ((string)(null)), table1, "Given ");
#line 10
 testRunner.Then("User \'jayesh.kumud@gmail.com\' displayes on home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        public virtual void US002_AC01ProductSearchPagesDisplaysForValidAndInvalidProduct(string product, string message, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("US002_AC01 : Product search pages displays for valid and invalid product", null, exampleTags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 14
 testRunner.Given(string.Format("User enter \'{0}\' on home page", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("I select \'Search\' button on home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then(string.Format("Product search page displays for \'{0}\'", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And(string.Format("\'{0}\' displays on product search page", message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("US002_AC01 : Product search pages displays for valid and invalid product, mobile", SourceLine=19)]
        public virtual void US002_AC01ProductSearchPagesDisplaysForValidAndInvalidProduct_Mobile()
        {
#line 13
this.US002_AC01ProductSearchPagesDisplaysForValidAndInvalidProduct("mobile", "mobile", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("US002_AC01 : Product search pages displays for valid and invalid product, aaaaaaa" +
            "aaaaaaaaaaaaaaa", SourceLine=19)]
        public virtual void US002_AC01ProductSearchPagesDisplaysForValidAndInvalidProduct_Aaaaaaaaaaaaaaaaaaaaaa()
        {
#line 13
this.US002_AC01ProductSearchPagesDisplaysForValidAndInvalidProduct("aaaaaaaaaaaaaaaaaaaaaa", "Sorry, no results found!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
